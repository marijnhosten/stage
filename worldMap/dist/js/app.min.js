/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var geo=__webpack_require__(1),cycleLetters=__webpack_require__(2),fillData=__webpack_require__(3),headerAnim=__webpack_require__(4),mapAnim=__webpack_require__(5);headerAnim.slideIn(),geo.getLonLatFromCountry("Belgium"),fillData.loadName("Marijn Hosten"),fillData.loadLocation("Belgium"),fillData.loadDate(),fillData.loadTime(),mapAnim.slideIn(),setInterval(function(){location.reload()},3e4);var CycleLetters=function(){"use strict";function t(t,e,a){var n=$(".letter"),i=a.split(""),o=100,r=0,c=setInterval(function(){t=i[r],$(n[e]).html(t),e++,r++,r===n.length&&clearInterval(c)},o)}function e(t){var e=t.split(""),a=e.length,n=[];e.reverse();for(var i,o=a-1;o>-1;o--)i=String.fromCharCode(60+Math.floor(61*Math.random())),n.push(i);return n}var a=function(){},n=function(a){var n=0,i=setInterval(function(){$("#cycle").html("");var o=e(a);$.each(o,function(t,e){var a="<div class='letter letter"+t+"'>"+e+"</div>";$("#cycle").append(a)}),n++,60===n&&(clearInterval(i),t("m",0,a))},100)};return{init:a,animateName:n}}();module.exports=CycleLetters;var Header=function(){"use strict";var t=function(){var t=$("#title");$(t).animate({width:"95%"},1500,"linear");var e=0,a=setInterval(function(){$("#targetName").css({width:e+"px"}),740>e?e+=10:clearInterval(a)},50),n=0,i=setInterval(function(){$("#dateP").css({width:n+"px"}),250>n?n+=10:clearInterval(i)},50),o=0;setTimeout(function(){var t=setInterval(function(){$("#locationName").css({width:o+"px"}),650>o?o+=10:clearInterval(t)},50)},3e3);var r=0,c=setInterval(function(){$("#coordP").css({width:r+"px"}),250>r?r+=10:clearInterval(c)},50);setTimeout(function(){var t=0,e=setInterval(function(){$("#lonLat").css({width:t+"px"}),550>t?t+=10:clearInterval(e)},50)},1e3);var s=0,l=setInterval(function(){$("#localTimeH").css({width:s+"px"}),130>s?s+=10:clearInterval(l)},50);$("#time").animate({opacity:1},1e3),$("#cycle").animate({opacity:.6},1e3)};return{slideIn:t}}();module.exports=Header;var Map=function(){"use strict";function t(){var t=0,n=0;setTimeout(function(){var i=$("#lonLat").text().split(" ");t=i[1].slice(0,-1),n=i[3].slice(0,-1),t=e(t),n=a(n),$("#crossVertical").animate({left:"1700px",top:"600px",opacity:1},1e3,function(){$(this).animate({left:"1100px",top:"400px"},1e3,function(){var e=n-150;300>e&&(e=300),e>525&&(e=525),$(this).animate({top:e+"px",left:t+"px",width:"2px"},500,function(){$(this).animate({opacity:0},250,function(){$(this).animate({opacity:1},250)})})})}),$("#crossHorizontal").animate({top:"650px",left:"1450px",opacity:1},1e3,function(){$(this).animate({top:"630px",left:"950px"},1e3,function(){var e=t-150;400>e&&(e=400),e>1360&&(e=1360),$(this).animate({top:n+"px",left:e+"px",height:"2px"},500,function(){$(this).animate({opacity:0},250,function(){$(this).animate({opacity:1},250)})})})})},3e3)}function e(t){var e=1480;return t=parseInt(t),t+=180,t=t*e/360+380}function a(t){var e=745;return t=-1===t.indexOf("-")?"-"+t:t.split("-")[1],t=parseInt(t),t+=90,t=t*e/180+290}var n=function(){$("#latLine").animate({top:"260px"},400),setTimeout(function(){$("#lonLine").animate({left:"370px"},400)},50),t()};return{slideIn:n}}();module.exports=Map;var GeoLocation=function(){"use strict";var t="&key=Hm0a1KFz9EV8IAqJEajc~xUj9JXZBCNuXAEAsYiVovw~AsX-y_j7KiiYVNzTCkZmx62dBQgEcyRaNAHOVJS8sDyhOqxOz5haFCsdpXtDVcmc",e="http://dev.virtualearth.net/REST/v1/Locations?countryRegion=",a=function(){},n=function(a){var n=e+a+t+"&jsonp=?";$.getJSON(n,function(t){var e,a;a=Math.round(100*t.resourceSets[0].resources[0].geocodePoints[0].coordinates[0])/100,e=Math.round(100*t.resourceSets[0].resources[0].geocodePoints[0].coordinates[1])/100,$("#lonLat").text("Long: "+e+"° Lat: "+a+"°")})};return{init:a,getLonLatFromCountry:n}}();module.exports=GeoLocation;var fillData=function(){"use strict";var t=function(t){$("#userName").text(t)},e=function(t){$("#userLocation").text(t)},a=function(){var t=new Date,e=t.getDate(),a=t.getMonth()+1,n=t.getFullYear();10>e&&(e="0"+e),10>a&&(a="0"+a),$("#date").text(e+"/"+a+"/"+n)},n=function(){var t=new Date,e=t.getHours(),a=t.getMinutes();10>e&&(e="0"+e),10>a&&(a="0"+a),$(".hour").text(e),$(".minute").text(a),setInterval(function(){var t=new Date,e=t.getHours(),a=t.getMinutes();10>e&&(e="0"+e),10>a&&(a="0"+a),$(".hour").text(e),$(".minute").text(a)},1e3)};return{loadName:t,loadLocation:e,loadDate:a,loadTime:n}}();module.exports=fillData;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIiwiYW5pbWF0aW9ucy9jeWNsZUxldHRlcnMuanMiLCJhbmltYXRpb25zL2hlYWRlci5qcyIsImFuaW1hdGlvbnMvbWFwLmpzIiwiYXBpL2dlb0xvY2F0aW9uLmpzIiwiZGF0YS9maWxsRGF0YS5qcyJdLCJuYW1lcyI6WyJnZW8iLCJyZXF1aXJlIiwiY3ljbGVMZXR0ZXJzIiwiZmlsbERhdGEiLCJoZWFkZXJBbmltIiwibWFwQW5pbSIsInNsaWRlSW4iLCJnZXRMb25MYXRGcm9tQ291bnRyeSIsImxvYWROYW1lIiwibG9hZExvY2F0aW9uIiwibG9hZERhdGUiLCJsb2FkVGltZSIsInNldEludGVydmFsIiwibG9jYXRpb24iLCJyZWxvYWQiLCJDeWNsZUxldHRlcnMiLCJyZXBsYWNlTGV0dGVyIiwibGV0dGVyIiwiaW5kZXgiLCJuYW1lIiwibGV0dGVycyIsIiQiLCJzcGxpdHRlZCIsInNwbGl0IiwidGltZSIsImkiLCJpbnRlcnZhbCIsImh0bWwiLCJsZW5ndGgiLCJjbGVhckludGVydmFsIiwibWFrZVJhbmRvbUxldHRlcnMiLCJsIiwicmFuZG9tTGV0dGVycyIsInJldmVyc2UiLCJyYW5kb21MZXR0ZXIiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJwdXNoIiwiaW5pdCIsImFuaW1hdGVOYW1lIiwiaW50IiwiYXJyUmFuZG9tIiwiZWFjaCIsImRpdiIsImFwcGVuZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJIZWFkZXIiLCJib3JkZXJzIiwiYW5pbWF0ZSIsIndpZHRoIiwibmFtZVdpZHRoIiwibmFtZUludGVydmFsIiwiY3NzIiwiZGF0ZVdpZHRoIiwiZGF0ZUludGVydmFsIiwibG9jYXRpb25XaWR0aCIsInNldFRpbWVvdXQiLCJsb2NhdGlvbkludGVydmFsIiwiY29vcmRXaWR0aCIsImNvb3JkSW50ZXJ2YWwiLCJsb25XaWR0aCIsImxvbkludGVydmFsIiwibG9jYWxUaW1lV2lkdGgiLCJsb2NhbFRpbWVJbnRlcnZhbCIsIm9wYWNpdHkiLCJNYXAiLCJhbmltYXRlQ3Jvc3MiLCJsZWZ0IiwidG9wIiwidGV4dCIsInNsaWNlIiwiY2FsY3VsYXRlTGVmdCIsImNhbGN1bGF0ZVRvcCIsInRoaXMiLCJ2ZXJ0VG9wIiwiaG9yTGVmdCIsImhlaWdodCIsImxvbmciLCJjb250YWluZXJXaWR0aCIsInBhcnNlSW50IiwibGF0IiwiY29udGFpbmVySGVpZ2h0IiwiaW5kZXhPZiIsIkdlb0xvY2F0aW9uIiwiQklOR19NQVBTX0tFWSIsIkJJTkdfVVJMIiwiZ2V0TG9uZ0xhdEZyb21Db3VudHJ5IiwiY291bnRyeSIsInVybCIsImdldEpTT04iLCJyZXN1bHQiLCJsb24iLCJyb3VuZCIsInJlc291cmNlU2V0cyIsInJlc291cmNlcyIsImdlb2NvZGVQb2ludHMiLCJjb29yZGluYXRlcyIsImRhdGUiLCJEYXRlIiwiZGF5IiwiZ2V0RGF0ZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJob3VyIiwiZ2V0SG91cnMiLCJtaW51dGVzIiwiZ2V0TWludXRlcyJdLCJtYXBwaW5ncyI6IkFBRUEsR0FBQUEsS0FBQUMsUUFBQSwrQkFDQUMsYUFBQUQsUUFBQSx1Q0FDQUUsU0FBQUYsUUFBQSw2QkFDQUcsV0FBQUgsUUFBQSxpQ0FDQUksUUFBQUosUUFBQSw2QkFLQUcsWUFBQUUsVUFDQU4sSUFBQU8scUJBQUEsV0FDQUosU0FBQUssU0FBQSxpQkFDQUwsU0FBQU0sYUFBQSxXQUNBTixTQUFBTyxXQUNBUCxTQUFBUSxXQUNBTixRQUFBQyxVQUdBTSxZQUFBLFdBQ0FDLFNBQUFDLFVBQ0EsSUN0QkEsSUFBQUMsY0FBQSxXQUNBLFlBZ0NBLFNBQUFDLEdBQUFDLEVBQUFDLEVBQUFDLEdBRUEsR0FBQUMsR0FBQUMsRUFBQSxXQUNBQyxFQUFBSCxFQUFBSSxNQUFBLElBQ0FDLEVBQUEsSUFDQUMsRUFBQSxFQUVBQyxFQUFBZCxZQUFBLFdBRUFLLEVBQUFLLEVBQUFHLEdBQ0FKLEVBQUFELEVBQUFG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QUFTLFdBQ0FDLEVBQUFWLEVBQUFXLFlBRUEsSUFBQUgsSUFDQUEsRUFBQSxJQUFBQSxHQUdBLEdBQUFFLElBQ0FBLEVBQUEsSUFBQUEsR0FHQTFGLEVBQUEsU0FBQW9ELEtBQUFvQyxHQUNBeEYsRUFBQSxXQUFBb0QsS0FBQXNDLEdBRUFuRyxZQUFBLFdBRUEsR0FBQXlGLEdBQUEsR0FBQUMsTUFDQU8sRUFBQVIsRUFBQVMsV0FDQUMsRUFBQVYsRUFBQVcsWUFFQSxJQUFBSCxJQUNBQSxFQUFBLElBQUFBLEdBR0EsR0FBQUUsSUFDQUEsRUFBQSxJQUFBQSxHQUdBMUYsRUFBQSxTQUFBb0QsS0FBQW9DLEdBQ0F4RixFQUFBLFdBQUFvRCxLQUFBc0MsSUFDQSxLQUtBLFFBQ0F2RyxTQUFBQSxFQUNBQyxhQUFBQSxFQUNBQyxTQUFBQSxFQUNBQyxTQUFBQSxLQUtBcUMsUUFBQUMsUUFBQTlDIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlbnRyeSBwb2ludDogd29ybGRfbWFwL2Rpc3QvanMvYXBwLm1pbi5qc1xuXG52YXIgZ2VvID0gcmVxdWlyZShcIi4uLy4uL2pzL2FwaS9nZW9Mb2NhdGlvbi5qc1wiKTtcbnZhciBjeWNsZUxldHRlcnMgPSByZXF1aXJlKFwiLi4vLi4vanMvYW5pbWF0aW9ucy9jeWNsZUxldHRlcnMuanNcIik7XG52YXIgZmlsbERhdGEgPSByZXF1aXJlKFwiLi4vLi4vanMvZGF0YS9maWxsRGF0YS5qc1wiKTtcbnZhciBoZWFkZXJBbmltID0gcmVxdWlyZShcIi4uLy4uL2pzL2FuaW1hdGlvbnMvaGVhZGVyLmpzXCIpO1xudmFyIG1hcEFuaW0gPSByZXF1aXJlKFwiLi4vLi4vanMvYW5pbWF0aW9ucy9tYXAuanNcIik7XG5cbi8vY3ljbGVMZXR0ZXJzLmFuaW1hdGVOYW1lKFwiMHgwMjJFQkM0NlwiKTtcblxuXG5oZWFkZXJBbmltLnNsaWRlSW4oKTtcbmdlby5nZXRMb25MYXRGcm9tQ291bnRyeShcIkJlbGdpdW1cIik7XG5maWxsRGF0YS5sb2FkTmFtZShcIk1hcmlqbiBIb3N0ZW5cIik7XG5maWxsRGF0YS5sb2FkTG9jYXRpb24oXCJCZWxnaXVtXCIpO1xuZmlsbERhdGEubG9hZERhdGUoKTtcbmZpbGxEYXRhLmxvYWRUaW1lKCk7XG5tYXBBbmltLnNsaWRlSW4oKTtcblxuXG5zZXRJbnRlcnZhbChmdW5jdGlvbigpe1xuICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xufSwgMzAwMDApO1xuIiwidmFyIEN5Y2xlTGV0dGVycyA9IChmdW5jdGlvbiAoKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcblxuXG4gICAgfTtcblxuICAgIHZhciBhbmltYXRlTmFtZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG5cbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICB2YXIgaW50ID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAkKCcjY3ljbGUnKS5odG1sKCcnKTtcblxuICAgICAgICAgICAgdmFyIGFyclJhbmRvbSA9IG1ha2VSYW5kb21MZXR0ZXJzKG5hbWUpO1xuXG4gICAgICAgICAgICAkLmVhY2goYXJyUmFuZG9tLCBmdW5jdGlvbiAoaW5kZXgsIGxldHRlcikge1xuICAgICAgICAgICAgICAgIHZhciBkaXYgPSBcIjxkaXYgY2xhc3M9J2xldHRlciBsZXR0ZXJcIiArIGluZGV4ICsgXCInPlwiICsgbGV0dGVyICsgXCI8L2Rpdj5cIjtcbiAgICAgICAgICAgICAgICAkKCcjY3ljbGUnKS5hcHBlbmQoZGl2KTtcbiAgICAgICAgICAgIH0pO1xuXG5cbiAgICAgICAgICAgIGkrKztcblxuICAgICAgICAgICAgaWYgKGkgPT09IDYwKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnQpO1xuICAgICAgICAgICAgICAgIHJlcGxhY2VMZXR0ZXIoXCJtXCIsIDAsIG5hbWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0sIDEwMCk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHJlcGxhY2VMZXR0ZXIobGV0dGVyLCBpbmRleCwgbmFtZSkge1xuXG4gICAgICAgIHZhciBsZXR0ZXJzID0gJCgnLmxldHRlcicpO1xuICAgICAgICB2YXIgc3BsaXR0ZWQgPSBuYW1lLnNwbGl0KCcnKTtcbiAgICAgICAgdmFyIHRpbWUgPSAxMDA7XG4gICAgICAgIHZhciBpID0gMDtcblxuICAgICAgICB2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIGxldHRlciA9IHNwbGl0dGVkW2ldO1xuICAgICAgICAgICAgJChsZXR0ZXJzW2luZGV4XSkuaHRtbChsZXR0ZXIpO1xuXG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICAgICAgaSsrO1xuXG4gICAgICAgICAgICBpZiAoaSA9PT0gbGV0dGVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgdGltZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWFrZVJhbmRvbUxldHRlcnMobmFtZSkge1xuICAgICAgICB2YXIgbGV0dGVycyA9IG5hbWUuc3BsaXQoJycpLCBsID0gbGV0dGVycy5sZW5ndGgsIHJhbmRvbUxldHRlcnMgPSBbXTtcbiAgICAgICAgbGV0dGVycy5yZXZlcnNlKCk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IGwgLSAxLCByYW5kb21MZXR0ZXI7IGkgPiAtMTsgaS0tKSB7XG5cbiAgICAgICAgICAgIHJhbmRvbUxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoNjAgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA2MSkpO1xuICAgICAgICAgICAgcmFuZG9tTGV0dGVycy5wdXNoKHJhbmRvbUxldHRlcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmFuZG9tTGV0dGVycztcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBpbml0OiBpbml0LFxuICAgICAgICBhbmltYXRlTmFtZTogYW5pbWF0ZU5hbWVcbiAgICB9O1xuXG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEN5Y2xlTGV0dGVyczsiLCJ2YXIgSGVhZGVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIHZhciBzbGlkZUluID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBib3JkZXJzID0gJChcIiN0aXRsZVwiKTtcblxuICAgICAgICAkKGJvcmRlcnMpLmFuaW1hdGUoe1xuICAgICAgICAgICAgJ3dpZHRoJzogJzk1JSdcbiAgICAgICAgfSwgMTUwMCwgJ2xpbmVhcicpO1xuXG4gICAgICAgIHZhciBuYW1lV2lkdGggPSAwO1xuICAgICAgICB2YXIgbmFtZUludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAkKCcjdGFyZ2V0TmFtZScpLmNzcyh7XG4gICAgICAgICAgICAgICAgJ3dpZHRoJzogbmFtZVdpZHRoICsgJ3B4J1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChuYW1lV2lkdGggPCA3NDApIHtcbiAgICAgICAgICAgICAgICBuYW1lV2lkdGggKz0gMTA7XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChuYW1lSW50ZXJ2YWwpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0sIDUwKTtcblxuICAgICAgICB2YXIgZGF0ZVdpZHRoID0gMDtcbiAgICAgICAgdmFyIGRhdGVJbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgJCgnI2RhdGVQJykuY3NzKHtcbiAgICAgICAgICAgICAgICAnd2lkdGgnOiBkYXRlV2lkdGggKyAncHgnXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGRhdGVXaWR0aCA8IDI1MCkge1xuICAgICAgICAgICAgICAgIGRhdGVXaWR0aCArPSAxMDtcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGRhdGVJbnRlcnZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDUwKTtcblxuICAgICAgICB2YXIgbG9jYXRpb25XaWR0aCA9IDA7XG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciBsb2NhdGlvbkludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgJCgnI2xvY2F0aW9uTmFtZScpLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICd3aWR0aCc6IGxvY2F0aW9uV2lkdGggKyAncHgnXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBpZiAobG9jYXRpb25XaWR0aCA8IDY1MCkge1xuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbldpZHRoICs9IDEwO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChsb2NhdGlvbkludGVydmFsKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0sIDUwKTtcbiAgICAgICAgfSwgMzAwMCk7XG5cbiAgICAgICAgLypzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAkKCcjbG9jYXRpb25OYW1lJykuY3NzKHtcbiAgICAgICAgICAgICAgICAnd2lkdGgnOiAnMCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCAzMDAwMCk7Ki9cblxuICAgICAgICB2YXIgY29vcmRXaWR0aCA9IDA7XG4gICAgICAgIHZhciBjb29yZEludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAkKCcjY29vcmRQJykuY3NzKHtcbiAgICAgICAgICAgICAgICAnd2lkdGgnOiBjb29yZFdpZHRoICsgJ3B4J1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChjb29yZFdpZHRoIDwgMjUwKSB7XG4gICAgICAgICAgICAgICAgY29vcmRXaWR0aCArPSAxMDtcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGNvb3JkSW50ZXJ2YWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCA1MCk7XG5cblxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgICAgIHZhciBsb25XaWR0aCA9IDA7XG4gICAgICAgICAgICB2YXIgbG9uSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAkKCcjbG9uTGF0JykuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgJ3dpZHRoJzogbG9uV2lkdGggKyAncHgnXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBpZiAobG9uV2lkdGggPCA1NTApIHtcbiAgICAgICAgICAgICAgICAgICAgbG9uV2lkdGggKz0gMTA7XG5cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGxvbkludGVydmFsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCA1MCk7XG5cbiAgICAgICAgfSwgMTAwMCk7XG5cbiAgICAgICAgdmFyIGxvY2FsVGltZVdpZHRoID0gMDtcbiAgICAgICAgdmFyIGxvY2FsVGltZUludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAkKCcjbG9jYWxUaW1lSCcpLmNzcyh7XG4gICAgICAgICAgICAgICAgJ3dpZHRoJzogbG9jYWxUaW1lV2lkdGggKyAncHgnXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGxvY2FsVGltZVdpZHRoIDwgMTMwKSB7XG4gICAgICAgICAgICAgICAgbG9jYWxUaW1lV2lkdGggKz0gMTA7XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChsb2NhbFRpbWVJbnRlcnZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIDUwKTtcblxuICAgICAgICAkKCcjdGltZScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgJ29wYWNpdHknOiAxXG4gICAgICAgIH0sIDEwMDApO1xuXG4gICAgICAgICQoJyNjeWNsZScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgJ29wYWNpdHknOiAwLjZcbiAgICAgICAgfSwgMTAwMCk7XG5cbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2xpZGVJbjogc2xpZGVJblxuICAgIH07XG5cbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gSGVhZGVyOyIsInZhciBNYXAgPSAoZnVuY3Rpb24gKCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgdmFyIHNsaWRlSW4gPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgJChcIiNsYXRMaW5lXCIpLmFuaW1hdGUoe1xuICAgICAgICAgICAgJ3RvcCc6ICcyNjBweCdcbiAgICAgICAgfSwgNDAwKTtcblxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQoXCIjbG9uTGluZVwiKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAnbGVmdCc6ICczNzBweCdcbiAgICAgICAgICAgIH0sIDQwMCk7XG4gICAgICAgIH0sIDUwKTtcblxuICAgICAgICBhbmltYXRlQ3Jvc3MoKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gYW5pbWF0ZUNyb3NzKCkge1xuXG4gICAgICAgIHZhciBsZWZ0ID0gMCwgdG9wID0gMDtcblxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgdmFyIHNwbGl0ID0gJCgnI2xvbkxhdCcpLnRleHQoKS5zcGxpdCgnICcpO1xuXG5cbiAgICAgICAgICAgIGxlZnQgPSBzcGxpdFsxXS5zbGljZSgwLCAtMSk7XG4gICAgICAgICAgICB0b3AgPSBzcGxpdFszXS5zbGljZSgwLCAtMSk7XG5cbiAgICAgICAgICAgIGxlZnQgPSBjYWxjdWxhdGVMZWZ0KGxlZnQpO1xuICAgICAgICAgICAgdG9wID0gY2FsY3VsYXRlVG9wKHRvcCk7XG5cbiAgICAgICAgICAgICQoXCIjY3Jvc3NWZXJ0aWNhbFwiKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAnbGVmdCc6ICcxNzAwcHgnLFxuICAgICAgICAgICAgICAgICd0b3AnOiAnNjAwcHgnLFxuICAgICAgICAgICAgICAgICdvcGFjaXR5JzogMVxuICAgICAgICAgICAgfSwgMTAwMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICQodGhpcykuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICdsZWZ0JzogJzExMDBweCcsXG4gICAgICAgICAgICAgICAgICAgICd0b3AnOiAnNDAwcHgnXG4gICAgICAgICAgICAgICAgfSwgMTAwMCwgZnVuY3Rpb24gKCkge1xuXG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIHZlcnRUb3AgPSB0b3AgLSAxNTA7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHZlcnRUb3AgPCAzMDApIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmVydFRvcCA9IDMwMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmICh2ZXJ0VG9wID4gNTI1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0VG9wID0gNTI1O1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICd0b3AnOiB2ZXJ0VG9wICsgJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdsZWZ0JzogbGVmdCArICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnd2lkdGgnOiAnMnB4J1xuICAgICAgICAgICAgICAgICAgICB9LCA1MDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29wYWNpdHknOiAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAyNTAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb3BhY2l0eSc6IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAyNTApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICQoXCIjY3Jvc3NIb3Jpem9udGFsXCIpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICd0b3AnOiAnNjUwcHgnLFxuICAgICAgICAgICAgICAgICdsZWZ0JzogJzE0NTBweCcsXG4gICAgICAgICAgICAgICAgJ29wYWNpdHknOiAxXG4gICAgICAgICAgICB9LCAxMDAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgJ3RvcCc6ICc2MzBweCcsXG4gICAgICAgICAgICAgICAgICAgICdsZWZ0JzogJzk1MHB4J1xuICAgICAgICAgICAgICAgIH0sIDEwMDAsIGZ1bmN0aW9uICgpIHtcblxuXG4gICAgICAgICAgICAgICAgICAgIHZhciBob3JMZWZ0ID0gbGVmdCAtIDE1MDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoaG9yTGVmdCA8IDQwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaG9yTGVmdCA9IDQwMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmKGhvckxlZnQgPiAxMzYwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhvckxlZnQgPSAxMzYwO1xuICAgICAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3RvcCc6IHRvcCArICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnbGVmdCc6IGhvckxlZnQgKyAncHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2hlaWdodCc6ICcycHgnXG4gICAgICAgICAgICAgICAgICAgIH0sIDUwMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb3BhY2l0eSc6IDBcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDI1MCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdvcGFjaXR5JzogMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDI1MCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9LCAzMDAwKTtcblxuXG4gICAgICAgIC8qc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgJChcIiNjcm9zc0hvcml6b250YWxcIikuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgJ2xlZnQnOiAnNDAwcHgnLFxuICAgICAgICAgICAgICAgICd0b3AnOiAnMzUwcHgnLFxuICAgICAgICAgICAgICAgICdvcGFjaXR5JzogMCxcbiAgICAgICAgICAgICAgICAnaGVpZ2h0JzogJzFweCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCAzMDAwMCk7XG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgJChcIiNjcm9zc1ZlcnRpY2FsXCIpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICdsZWZ0JzogJzMwMHB4JyxcbiAgICAgICAgICAgICAgICAndG9wJzogJzUwMHB4JyxcbiAgICAgICAgICAgICAgICAnb3BhY2l0eSc6IDAsXG4gICAgICAgICAgICAgICAgJ3dpZHRoJzogJzFweCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCAzMDAwMCk7Ki9cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVMZWZ0KGxvbmcpIHtcblxuICAgICAgICB2YXIgY29udGFpbmVyV2lkdGggPSAxNDgwO1xuXG4gICAgICAgIGxvbmcgPSBwYXJzZUludChsb25nKTtcblxuXG4gICAgICAgIGxvbmcgKz0gMTgwO1xuXG4gICAgICAgIGxvbmcgPSAoKChsb25nICogY29udGFpbmVyV2lkdGgpIC8gMzYwKSArIDM4MCk7XG5cblxuICAgICAgICByZXR1cm4gbG9uZztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVUb3AobGF0KSB7XG5cblxuICAgICAgICB2YXIgY29udGFpbmVySGVpZ2h0ID0gNzQ1O1xuXG5cbiAgICAgICAgaWYgKGxhdC5pbmRleE9mKCctJykgPT09IC0xKSB7XG4gICAgICAgICAgICBsYXQgPSBcIi1cIiArIGxhdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxhdCA9IGxhdC5zcGxpdCgnLScpWzFdO1xuICAgICAgICB9XG5cbiAgICAgICAgbGF0ID0gcGFyc2VJbnQobGF0KTtcblxuICAgICAgICBsYXQgKz0gOTA7XG5cbiAgICAgICAgbGF0ID0gKCgobGF0ICogY29udGFpbmVySGVpZ2h0KSAvIDE4MCkgKyAyOTApO1xuXG5cbiAgICAgICAgcmV0dXJuIGxhdDtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBzbGlkZUluOiBzbGlkZUluXG4gICAgfTtcblxufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXA7IiwidmFyIEdlb0xvY2F0aW9uID0gKGZ1bmN0aW9uKCl7XG5cbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAvLyBodHRwOi8vZGV2LnZpcnR1YWxlYXJ0aC5uZXQvUkVTVC92MS9Mb2NhdGlvbnM/Y291bnRyeVJlZ2lvbj1jb3VudHJ5UmVnaW9uXG4gICAgLy8gJmFkbWluRGlzdHJpY3Q9YWRtaW5EaXN0cmljdCZsb2NhbGl0eT1sb2NhbGl0eSZwb3N0YWxDb2RlPXBvc3RhbENvZGUmYWRkcmVzc0xpbmU9YWRkcmVzc0xpbmVcbiAgICAvLyAmdXNlckxvY2F0aW9uPXVzZXJMb2NhdGlvbiZ1c2VySXA9dXNlcklwJnVzZXJtYXBWaWV3PXVzZXJtYXBWaWV3JmluY2x1ZGVOZWlnaGJvcmhvb2Q9aW5jbHVkZU5laWdoYm9yaG9vZFxuICAgIC8vICZtYXhSZXN1bHRzPW1heFJlc3VsdHMma2V5PUJpbmdNYXBzS2V5XG5cbiAgICB2YXIgQklOR19NQVBTX0tFWSA9IFwiJmtleT1IbTBhMUtGejlFVjhJQXFKRWFqY354VWo5SlhaQkNOdVhBRUFzWWlWb3Z3fkFzWC15X2o3S2lpWVZOelRDa1pteDYyZEJRZ0VjeVJhTkFIT1ZKUzhzRHloT3F4T3o1aGFGQ3NkcFh0RFZjbWNcIjtcbiAgICB2YXIgQklOR19VUkwgPSBcImh0dHA6Ly9kZXYudmlydHVhbGVhcnRoLm5ldC9SRVNUL3YxL0xvY2F0aW9ucz9jb3VudHJ5UmVnaW9uPVwiO1xuXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbigpe307XG5cblxuICAgIHZhciBnZXRMb25nTGF0RnJvbUNvdW50cnkgPSBmdW5jdGlvbihjb3VudHJ5KXtcblxuICAgICAgICB2YXIgdXJsID0gQklOR19VUkwgKyBjb3VudHJ5ICsgQklOR19NQVBTX0tFWSArIFwiJmpzb25wPT9cIjtcblxuICAgICAgICAkLmdldEpTT04odXJsLCBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICAgIHZhciBsb24sIGxhdDtcblxuICAgICAgICAgICAgbGF0ID0gTWF0aC5yb3VuZCggcmVzdWx0LnJlc291cmNlU2V0c1swXS5yZXNvdXJjZXNbMF0uZ2VvY29kZVBvaW50c1swXS5jb29yZGluYXRlc1swXSAqIDEwMCkgLyAxMDA7XG4gICAgICAgICAgICBsb24gPSBNYXRoLnJvdW5kKHJlc3VsdC5yZXNvdXJjZVNldHNbMF0ucmVzb3VyY2VzWzBdLmdlb2NvZGVQb2ludHNbMF0uY29vcmRpbmF0ZXNbMV0gKiAxMDApIC8gMTAwO1xuXG5cbiAgICAgICAgICAgICQoJyNsb25MYXQnKS50ZXh0KCdMb25nOiAnICsgbG9uICsgJ8KwIExhdDogJyAgKyBsYXQgKyAnwrAnKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5pdDogaW5pdCxcbiAgICAgICAgZ2V0TG9uTGF0RnJvbUNvdW50cnk6IGdldExvbmdMYXRGcm9tQ291bnRyeVxuICAgIH07XG5cbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gR2VvTG9jYXRpb247IiwidmFyIGZpbGxEYXRhID0gKGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuXG4gICAgdmFyIGxvYWROYW1lID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgJCgnI3VzZXJOYW1lJykudGV4dChuYW1lKTtcbiAgICB9O1xuXG4gICAgdmFyIGxvYWRMb2NhdGlvbiA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICAkKCcjdXNlckxvY2F0aW9uJykudGV4dChsb2NhdGlvbik7XG4gICAgfTtcblxuICAgIHZhciBsb2FkRGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIHZhciBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7XG4gICAgICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuXG4gICAgICAgIGlmIChkYXkgPCAxMCkge1xuICAgICAgICAgICAgZGF5ID0gJzAnICsgZGF5O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1vbnRoIDwgMTApIHtcbiAgICAgICAgICAgIG1vbnRoID0gJzAnICsgbW9udGg7XG4gICAgICAgIH1cblxuICAgICAgICAkKCcjZGF0ZScpLnRleHQoZGF5ICsgJy8nICsgbW9udGggKyAnLycgKyB5ZWFyKTtcbiAgICB9O1xuXG4gICAgdmFyIGxvYWRUaW1lID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTtcbiAgICAgICAgdmFyIGhvdXIgPSBkYXRlLmdldEhvdXJzKCk7XG4gICAgICAgIHZhciBtaW51dGVzID0gZGF0ZS5nZXRNaW51dGVzKCk7XG5cbiAgICAgICAgaWYoaG91ciA8IDEwKXtcbiAgICAgICAgICAgIGhvdXIgPSAnMCcgKyBob3VyO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYobWludXRlcyA8IDEwKXtcbiAgICAgICAgICAgIG1pbnV0ZXMgPSAnMCcgKyBtaW51dGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgJCgnLmhvdXInKS50ZXh0KGhvdXIpO1xuICAgICAgICAkKCcubWludXRlJykudGV4dChtaW51dGVzKTtcblxuICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xuXG4gICAgICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICB2YXIgaG91ciA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICAgICAgICAgIHZhciBtaW51dGVzID0gZGF0ZS5nZXRNaW51dGVzKCk7XG5cbiAgICAgICAgICAgIGlmKGhvdXIgPCAxMCl7XG4gICAgICAgICAgICAgICAgaG91ciA9ICcwJyArIGhvdXI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmKG1pbnV0ZXMgPCAxMCl7XG4gICAgICAgICAgICAgICAgbWludXRlcyA9ICcwJyArIG1pbnV0ZXM7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoJy5ob3VyJykudGV4dChob3VyKTtcbiAgICAgICAgICAgICQoJy5taW51dGUnKS50ZXh0KG1pbnV0ZXMpO1xuICAgICAgICB9LCAxMDAwKTtcblxuXG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGxvYWROYW1lOiBsb2FkTmFtZSxcbiAgICAgICAgbG9hZExvY2F0aW9uOiBsb2FkTG9jYXRpb24sXG4gICAgICAgIGxvYWREYXRlOiBsb2FkRGF0ZSxcbiAgICAgICAgbG9hZFRpbWU6IGxvYWRUaW1lXG4gICAgfTtcblxufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmaWxsRGF0YTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=


/***/ },
/* 1 */
/***/ function(module, exports) {

	var GeoLocation = (function(){

	    "use strict";
	    // http://dev.virtualearth.net/REST/v1/Locations?countryRegion=countryRegion
	    // &adminDistrict=adminDistrict&locality=locality&postalCode=postalCode&addressLine=addressLine
	    // &userLocation=userLocation&userIp=userIp&usermapView=usermapView&includeNeighborhood=includeNeighborhood
	    // &maxResults=maxResults&key=BingMapsKey

	    var BING_MAPS_KEY = "&key=Hm0a1KFz9EV8IAqJEajc~xUj9JXZBCNuXAEAsYiVovw~AsX-y_j7KiiYVNzTCkZmx62dBQgEcyRaNAHOVJS8sDyhOqxOz5haFCsdpXtDVcmc";
	    var BING_URL = "http://dev.virtualearth.net/REST/v1/Locations?countryRegion=";

	    var init = function(){};


	    var getLongLatFromCountry = function(country){

	        var url = BING_URL + country + BING_MAPS_KEY + "&jsonp=?";

	        $.getJSON(url, function(result) {
	            var lon, lat;

	            lat = Math.round( result.resourceSets[0].resources[0].geocodePoints[0].coordinates[0] * 100) / 100;
	            lon = Math.round(result.resourceSets[0].resources[0].geocodePoints[0].coordinates[1] * 100) / 100;


	            $('#lonLat').text('Long: ' + lon + '° Lat: '  + lat + '°');
	        });
	    };


	    return {
	        init: init,
	        getLonLatFromCountry: getLongLatFromCountry
	    };

	})();

	module.exports = GeoLocation;

/***/ },
/* 2 */
/***/ function(module, exports) {

	var CycleLetters = (function () {
	    "use strict";

	    var init = function () {


	    };

	    var animateName = function (name) {

	        var i = 0;
	        var int = setInterval(function () {

	            $('#cycle').html('');

	            var arrRandom = makeRandomLetters(name);

	            $.each(arrRandom, function (index, letter) {
	                var div = "<div class='letter letter" + index + "'>" + letter + "</div>";
	                $('#cycle').append(div);
	            });


	            i++;

	            if (i === 60) {
	                clearInterval(int);
	                replaceLetter("m", 0, name);
	            }

	        }, 100);
	    };

	    function replaceLetter(letter, index, name) {

	        var letters = $('.letter');
	        var splitted = name.split('');
	        var time = 100;
	        var i = 0;

	        var interval = setInterval(function () {

	            letter = splitted[i];
	            $(letters[index]).html(letter);

	            index++;
	            i++;

	            if (i === letters.length) {
	                clearInterval(interval);
	            }
	        }, time);
	    }

	    function makeRandomLetters(name) {
	        var letters = name.split(''), l = letters.length, randomLetters = [];
	        letters.reverse();

	        for (var i = l - 1, randomLetter; i > -1; i--) {

	            randomLetter = String.fromCharCode(60 + Math.floor(Math.random() * 61));
	            randomLetters.push(randomLetter);
	        }

	        return randomLetters;
	    }

	    return {
	        init: init,
	        animateName: animateName
	    };

	})();

	module.exports = CycleLetters;

/***/ },
/* 3 */
/***/ function(module, exports) {

	var fillData = (function () {
	    "use strict";


	    var loadName = function (name) {
	        $('#userName').text(name);
	    };

	    var loadLocation = function (location) {
	        $('#userLocation').text(location);
	    };

	    var loadDate = function () {
	        var date = new Date();
	        var day = date.getDate();
	        var month = date.getMonth() + 1;
	        var year = date.getFullYear();

	        if (day < 10) {
	            day = '0' + day;
	        }

	        if (month < 10) {
	            month = '0' + month;
	        }

	        $('#date').text(day + '/' + month + '/' + year);
	    };

	    var loadTime = function () {

	        var date = new Date();
	        var hour = date.getHours();
	        var minutes = date.getMinutes();

	        if(hour < 10){
	            hour = '0' + hour;
	        }

	        if(minutes < 10){
	            minutes = '0' + minutes;
	        }

	        $('.hour').text(hour);
	        $('.minute').text(minutes);

	        setInterval(function(){

	            var date = new Date();
	            var hour = date.getHours();
	            var minutes = date.getMinutes();

	            if(hour < 10){
	                hour = '0' + hour;
	            }

	            if(minutes < 10){
	                minutes = '0' + minutes;
	            }

	            $('.hour').text(hour);
	            $('.minute').text(minutes);
	        }, 1000);


	    };

	    return {
	        loadName: loadName,
	        loadLocation: loadLocation,
	        loadDate: loadDate,
	        loadTime: loadTime
	    };

	})();

	module.exports = fillData;

/***/ },
/* 4 */
/***/ function(module, exports) {

	var Header = (function () {
	    "use strict";

	    var slideIn = function () {

	        var borders = $("#title");

	        $(borders).animate({
	            'width': '95%'
	        }, 1500, 'linear');

	        var nameWidth = 0;
	        var nameInterval = setInterval(function () {

	            $('#targetName').css({
	                'width': nameWidth + 'px'
	            });

	            if (nameWidth < 740) {
	                nameWidth += 10;

	            } else {
	                clearInterval(nameInterval);
	            }

	        }, 50);

	        var dateWidth = 0;
	        var dateInterval = setInterval(function () {

	            $('#dateP').css({
	                'width': dateWidth + 'px'
	            });

	            if (dateWidth < 250) {
	                dateWidth += 10;

	            } else {
	                clearInterval(dateInterval);
	            }
	        }, 50);

	        var locationWidth = 0;

	        setTimeout(function () {

	            var locationInterval = setInterval(function () {

	                $('#locationName').css({
	                    'width': locationWidth + 'px'
	                });

	                if (locationWidth < 650) {
	                    locationWidth += 10;

	                } else {
	                    clearInterval(locationInterval);
	                }

	            }, 50);
	        }, 3000);

	        /*setTimeout(function(){
	            $('#locationName').css({
	                'width': '0'
	            });
	        }, 30000);*/

	        var coordWidth = 0;
	        var coordInterval = setInterval(function () {

	            $('#coordP').css({
	                'width': coordWidth + 'px'
	            });

	            if (coordWidth < 250) {
	                coordWidth += 10;

	            } else {
	                clearInterval(coordInterval);
	            }
	        }, 50);


	        setTimeout(function(){

	            var lonWidth = 0;
	            var lonInterval = setInterval(function () {

	                $('#lonLat').css({
	                    'width': lonWidth + 'px'
	                });

	                if (lonWidth < 550) {
	                    lonWidth += 10;

	                } else {
	                    clearInterval(lonInterval);
	                }
	            }, 50);

	        }, 1000);

	        var localTimeWidth = 0;
	        var localTimeInterval = setInterval(function () {

	            $('#localTimeH').css({
	                'width': localTimeWidth + 'px'
	            });

	            if (localTimeWidth < 130) {
	                localTimeWidth += 10;

	            } else {
	                clearInterval(localTimeInterval);
	            }
	        }, 50);

	        $('#time').animate({
	            'opacity': 1
	        }, 1000);

	        $('#cycle').animate({
	            'opacity': 0.6
	        }, 1000);

	    };

	    return {
	        slideIn: slideIn
	    };

	})();

	module.exports = Header;

/***/ },
/* 5 */
/***/ function(module, exports) {

	var Map = (function () {
	    "use strict";

	    var slideIn = function () {

	        $("#latLine").animate({
	            'top': '260px'
	        }, 400);

	        setTimeout(function () {
	            $("#lonLine").animate({
	                'left': '370px'
	            }, 400);
	        }, 50);

	        animateCross();
	    };

	    function animateCross() {

	        var left = 0, top = 0;

	        setTimeout(function () {

	            var split = $('#lonLat').text().split(' ');


	            left = split[1].slice(0, -1);
	            top = split[3].slice(0, -1);

	            left = calculateLeft(left);
	            top = calculateTop(top);

	            $("#crossVertical").animate({
	                'left': '1700px',
	                'top': '600px',
	                'opacity': 1
	            }, 1000, function () {
	                $(this).animate({
	                    'left': '1100px',
	                    'top': '400px'
	                }, 1000, function () {


	                    var vertTop = top - 150;

	                    if (vertTop < 300) {

	                        vertTop = 300;
	                    }

	                    if (vertTop > 525) {
	                        vertTop = 525;
	                    }

	                    $(this).animate({
	                        'top': vertTop + 'px',
	                        'left': left + 'px',
	                        'width': '2px'
	                    }, 500, function () {
	                        $(this).animate({
	                            'opacity': 0
	                        }, 250, function () {
	                            $(this).animate({
	                                'opacity': 1
	                            }, 250);
	                        });
	                    });
	                });
	            });

	            $("#crossHorizontal").animate({
	                'top': '650px',
	                'left': '1450px',
	                'opacity': 1
	            }, 1000, function () {
	                $(this).animate({
	                    'top': '630px',
	                    'left': '950px'
	                }, 1000, function () {


	                    var horLeft = left - 150;

	                    if (horLeft < 400) {
	                        horLeft = 400;
	                    }

	                    if(horLeft > 1360){
	                        horLeft = 1360;
	                    }


	                    $(this).animate({
	                        'top': top + 'px',
	                        'left': horLeft + 'px',
	                        'height': '2px'
	                    }, 500, function () {
	                        $(this).animate({
	                            'opacity': 0
	                        }, 250, function () {
	                            $(this).animate({
	                                'opacity': 1
	                            }, 250);
	                        });
	                    });
	                });
	            });

	        }, 3000);


	        /*setTimeout(function(){
	            $("#crossHorizontal").animate({
	                'left': '400px',
	                'top': '350px',
	                'opacity': 0,
	                'height': '1px'
	            });
	        }, 30000);

	        setTimeout(function(){
	            $("#crossVertical").animate({
	                'left': '300px',
	                'top': '500px',
	                'opacity': 0,
	                'width': '1px'
	            });
	        }, 30000);*/
	    }

	    function calculateLeft(long) {

	        var containerWidth = 1480;

	        long = parseInt(long);


	        long += 180;

	        long = (((long * containerWidth) / 360) + 380);


	        return long;
	    }

	    function calculateTop(lat) {


	        var containerHeight = 745;


	        if (lat.indexOf('-') === -1) {
	            lat = "-" + lat;
	        } else {
	            lat = lat.split('-')[1];
	        }

	        lat = parseInt(lat);

	        lat += 90;

	        lat = (((lat * containerHeight) / 180) + 290);


	        return lat;
	    }

	    return {
	        slideIn: slideIn
	    };

	})();

	module.exports = Map;

/***/ }
/******/ ]);